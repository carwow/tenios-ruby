module Tenios
  class Blocks
    class Bridge
      BLOCK_TYPE: String

      SEQUENTIAL: String

      PARALLEL: String

      EXTERNAL_NUMBER: String

      SIP_USER: String

      SIP_TRUNK: String

      BRIDGE_MODES: Array[String]

      DESTINATION_TYPES: Array[String]

      def initialize: (mode: String mode, ?timeout: Integer? timeout) { (Bridge) -> void } -> Bridge

      def with_destination: (String destination_type, String destination, ?Integer? timeout) -> Bridge

      def as_json: () -> {
        blockType: String,
        bridgeMode: String,
        timeout: Integer?,
        destinations: Array[
          {
            destinationType: String,
            destination: String,
            timeout: Integer?
          }
        ]
      }

      def sequential?: () -> (TrueClass | FalseClass)

      def parallel?: () -> (TrueClass | FalseClass)
    end
  end
end
