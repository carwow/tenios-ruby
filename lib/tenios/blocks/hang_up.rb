# frozen_string_literal: true

module Tenios
  class Blocks
    class HangUp
      BLOCK_TYPE = 'HANGUP'

      UNALLOCATED_NUMBER = 'UNALLOCATED_NUMBER'
      NO_ROUTE_TRANSIT_NET = 'NO_ROUTE_TRANSIT_NET'
      NO_ROUTE_DESTINATION = 'NO_ROUTE_DESTINATION'
      USER_BUSY = 'USER_BUSY'
      NO_USER_RESPONSE = 'NO_USER_RESPONSE'
      NO_ANSWER = 'NO_ANSWER'
      SUBSCRIBER_ABSENT = 'SUBSCRIBER_ABSENT'
      CALL_REJECTED = 'CALL_REJECTED'
      NUMBER_CHANGED = 'NUMBER_CHANGED'
      REDIRECTION_TO_NEW_DESTINATION = 'REDIRECTION_TO_NEW_DESTINATION'
      EXCHANGE_ROUTING_ERROR = 'EXCHANGE_ROUTING_ERROR'
      DESTINATION_OUT_OF_ORDER = 'DESTINATION_OUT_OF_ORDER'
      INVALID_NUMBER_FORMAT = 'INVALID_NUMBER_FORMAT'
      FACILITY_REJECTED = 'FACILITY_REJECTED'
      NORMAL_UNSPECIFIED = 'NORMAL_UNSPECIFIED'
      NORMAL_CIRCUIT_CONGESTION = 'NORMAL_CIRCUIT_CONGESTION'
      NETWORK_OUT_OF_ORDER = 'NETWORK_OUT_OF_ORDER'
      NORMAL_TEMPORARY_FAILURE = 'NORMAL_TEMPORARY_FAILURE'
      SWITCH_CONGESTION = 'SWITCH_CONGESTION'
      REQUESTED_CHAN_UNAVAIL = 'REQUESTED_CHAN_UNAVAIL'
      OUTGOING_CALL_BARRED = 'OUTGOING_CALL_BARRED'
      INCOMING_CALL_BARRED = 'INCOMING_CALL_BARRED'
      BEARERCAPABILITY_NOTAUTH = 'BEARERCAPABILITY_NOTAUTH'
      BEARERCAPABILITY_NOTAVAIL = 'BEARERCAPABILITY_NOTAVAIL'
      BEARERCAPABILITY_NOTIMPL = 'BEARERCAPABILITY_NOTIMPL'
      FACILITY_NOT_IMPLEMENTED = 'FACILITY_NOT_IMPLEMENTED'
      SERVICE_NOT_IMPLEMENTED = 'SERVICE_NOT_IMPLEMENTED'
      INCOMPATIBLE_DESTINATION = 'INCOMPATIBLE_DESTINATION'
      RECOVERY_ON_TIMER_EXPIRE = 'RECOVERY_ON_TIMER_EXPIRE'
      ORIGINATOR_CANCEL = 'ORIGINATOR_CANCEL'

      CAUSES = [
        UNALLOCATED_NUMBER,
        NO_ROUTE_TRANSIT_NET,
        NO_ROUTE_DESTINATION,
        USER_BUSY,
        NO_USER_RESPONSE,
        NO_ANSWER,
        SUBSCRIBER_ABSENT,
        CALL_REJECTED,
        NUMBER_CHANGED,
        REDIRECTION_TO_NEW_DESTINATION,
        EXCHANGE_ROUTING_ERROR,
        DESTINATION_OUT_OF_ORDER,
        INVALID_NUMBER_FORMAT,
        FACILITY_REJECTED,
        NORMAL_UNSPECIFIED,
        NORMAL_CIRCUIT_CONGESTION,
        NETWORK_OUT_OF_ORDER,
        NORMAL_TEMPORARY_FAILURE,
        SWITCH_CONGESTION,
        REQUESTED_CHAN_UNAVAIL,
        OUTGOING_CALL_BARRED,
        INCOMING_CALL_BARRED,
        BEARERCAPABILITY_NOTAUTH,
        BEARERCAPABILITY_NOTAVAIL,
        BEARERCAPABILITY_NOTIMPL,
        FACILITY_NOT_IMPLEMENTED,
        SERVICE_NOT_IMPLEMENTED,
        INCOMPATIBLE_DESTINATION,
        RECOVERY_ON_TIMER_EXPIRE,
        ORIGINATOR_CANCEL
      ].freeze

      def initialize(cause:)
        raise "cause must be one of #{CAUSES}" unless CAUSES.include?(cause)

        @cause = cause
      end

      def as_json(*)
        {
          blockType: BLOCK_TYPE,
          hangupCause: @cause
        }
      end
    end
  end
end
